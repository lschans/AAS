"use strict";

module.exports = ApplicationSelectorFactory; 

var config = require('./config');

// Stores available domains (globally)
var availableApplications;

function ApplicationSelectorFactory(server) {

   // Initialize available domains.
   availableApplications = getAvailableApplications();

   return function (request, response, nextInLine) {

      // Search application
      var app = selectApplication(availableApplications, request.headers.host);

      if (!app) {
         return nextInLine();
      }

      // Search application handler
      var handler = getApplicationHandler(app);

      if (!handler) {
         return nextInLine();
      }

      // Delegate control to application handler.

      var result = executeApplicationHandler(handler, request, response, nextInLine);

      if (!result) {
         // Callback is already done.
         nextInLine(new Error("Application handler errored out."))
      }               
   }

}

function executeApplicationHandler(handler, request, response, callback) {
   try { 
      handler(request, response, callback);
   } catch (exception) {
      callback(exception);
      return false;
   }
   return true;
}
function selectApplication(apps, host) {
   if (host in apps) {
      return apps[host];
   }

   host = host.split(":")[0];

   if (host in apps) {
      return apps[host];
   }

   return false;
}


function getApplicationHandler(app) {
   try { 
      return require(app.root + app.handler);
   } catch (exception) {
      return false;
   }
}

function getAvailableApplications() {
    var res = {};
    var cwd = process.cwd();

    require('fs').readdirSync(cwd + '/' + config.domainsPath + '/').forEach(function (domain) {
        try { 
            res[domain] = require(cwd + '/' + config.domainsPath + '/' + domain + '/' + config.applicationJson);
            res[domain].root = cwd + '/' + config.domainsPath + '/' + domain + '/';
            res[domain].handler = res[domain].handler || '';
        } catch (exception) {
            console.log("Error: mall-configured domain `" + domain + "`: " + exception);
        }
    });
    return res;
}




