/*
 * Serve module
 *
 * Description:  This module actually serves the file to client after all other operations are done
 *-----------------------------------------------------
 * Author: Lars van der Schans
 * Email:  lars@wodanbrothers.com
 *-----------------------------------------------------
 */

var fs = require('fs'),
    url     = require('url'),
    path    = require('path'),
    config = {},
    log = {};

module.exports = function(server) {
    config = server.config;
    log = server.log;

    var serve = {
        serveFile : function(request, response, callback) {
            // Add server ID to headers
            /*
                TODO:
                 *  Read request url
                 *  Read request host
                 *  Split for port? ':'
                 *  Test if we are logged on and change root dirs
                 *  Test if we are mobile and change root dirs
                 *  See if file exists
                 *  See if we are allowed to serve the file
                 *  Send error if we cannot
                 *  See if file is binary and change the type to that
                 *  If plain text render @@ template vars
                 *  Serve file if we can
            */

            // request.headers.host + request.url
            // FULL-URL: localhost/test/php?lol
            // REQ-URL: /test/php?lol

            // http://localhost/admin/images/test.jpg:80?lol=test&bla=3
            // http://www.server.nl/admin/images/test.jpg:80?lol=test&bla=3
            // http://127.0.0.1/admin/images/test.jpg:80?lol=test&bla=3

            /*
                split ? -> only use 1st part, get is already parsed
                split / -> pick last entry, this is the file
                split . -> pick extention

                test -> file is binary or text

                binary -> serve directly
                text -> parse smarty and serve

             */

            // Simple hack to serve the login index
            if(request.url === '/index.html') {
                response.addResponseHeader(request, response, ['Content-Type', 'text/html; charset=' + response.charset]);
                response.body = fs.readFileSync('./development/loginroot/index.html' ,{encoding:'utf8'});
                serve.write(request,response);
            } else {
                response.addResponseHeader(request, response, ['Content-Type', 'text/html; charset=' + response.charset]);
                serve.write(request,response);
            }

            if(typeof (callback) == 'function') callback(request, response);
            else return;
        },
        write : function (request, response) {
            // Add server name
            response.addResponseHeader(request, response, ['X-Powered-By', config.global['X-Powered-By']]);
            // Prepare the response and send to client
            response.prepareCookies(request, response, function(){
                response.headers
                response.writeHead(response.status, response.headers);
                response.write(response.body, response.encoding);
                response.end();
            });
        }
    }
    return serve;
}